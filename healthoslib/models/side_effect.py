# -*- coding: utf-8 -*-

"""
    healthoslib.models.side_effect
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 02/18/2017
"""
import healthoslib.models.base_model

class SideEffect(healthoslib.models.base_model.BaseModel):

    """Implementation of the 'SideEffect' model.

    TODO: type model description here.

    Attributes:
        term (string): TODO: type description here.
        count (int): TODO: type description here.
        percent (float): TODO: type description here.

    """

    def __init__(self, 
                 term = None,
                 count = None,
                 percent = None):
        """Constructor for the SideEffect class"""
        
        # Initialize members of the class
        self.term = term
        self.count = count
        self.percent = percent

        # Create a mapping from Model property names to API property names
        self.names = {
            "term" : "term",
            "count" : "count",
            "percent" : "percent",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            term = dictionary.get("term")
            count = dictionary.get("count")
            percent = dictionary.get("percent")
            # Return an object of this model
            return cls(term,
                       count,
                       percent)


