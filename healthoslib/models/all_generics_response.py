# -*- coding: utf-8 -*-

"""
    healthoslib.models.all_generics_response
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 02/18/2017
"""
import healthoslib.models.base_model

class AllGenericsResponse(healthoslib.models.base_model.BaseModel):

    """Implementation of the 'All GenericsResponse' model.

    TODO: type model description here.

    Attributes:
        name (string): TODO: type description here.
        pregnancy_category (string): TODO: type description here.
        lactation_category (string): TODO: type description here.
        instructions (string): TODO: type description here.
        faqs (string): TODO: type description here.
        genric_id (int): TODO: type description here.
        side_effects (string): TODO: type description here.
        how_it_works (string): TODO: type description here.
        therapeutic_class (string): TODO: type description here.
        used_for (string): TODO: type description here.
        strength (string): TODO: type description here.
        schedule (string): TODO: type description here.
        alcohol_interaction_description (string): TODO: type description
            here.
        alcohol_nteraction (bool): TODO: type description here.

    """

    def __init__(self, 
                 name = None,
                 pregnancy_category = None,
                 lactation_category = None,
                 instructions = None,
                 faqs = None,
                 genric_id = None,
                 side_effects = None,
                 how_it_works = None,
                 therapeutic_class = None,
                 used_for = None,
                 strength = None,
                 schedule = None,
                 alcohol_interaction_description = None,
                 alcohol_nteraction = None):
        """Constructor for the AllGenericsResponse class"""
        
        # Initialize members of the class
        self.name = name
        self.pregnancy_category = pregnancy_category
        self.lactation_category = lactation_category
        self.instructions = instructions
        self.faqs = faqs
        self.genric_id = genric_id
        self.side_effects = side_effects
        self.how_it_works = how_it_works
        self.therapeutic_class = therapeutic_class
        self.used_for = used_for
        self.strength = strength
        self.schedule = schedule
        self.alcohol_interaction_description = alcohol_interaction_description
        self.alcohol_nteraction = alcohol_nteraction

        # Create a mapping from Model property names to API property names
        self.names = {
            "name" : "name",
            "pregnancy_category" : "pregnancy_category",
            "lactation_category" : "lactation_category",
            "instructions" : "instructions",
            "faqs" : "faqs",
            "genric_id" : "genric_id",
            "side_effects" : "side_effects",
            "how_it_works" : "how_it_works",
            "therapeutic_class" : "therapeutic_class",
            "used_for" : "used_for",
            "strength" : "strength",
            "schedule" : "schedule",
            "alcohol_interaction_description" : "alcohol_interaction_description",
            "alcohol_nteraction" : "alcohol_nteraction",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            name = dictionary.get("name")
            pregnancy_category = dictionary.get("pregnancy_category")
            lactation_category = dictionary.get("lactation_category")
            instructions = dictionary.get("instructions")
            faqs = dictionary.get("faqs")
            genric_id = dictionary.get("genric_id")
            side_effects = dictionary.get("side_effects")
            how_it_works = dictionary.get("how_it_works")
            therapeutic_class = dictionary.get("therapeutic_class")
            used_for = dictionary.get("used_for")
            strength = dictionary.get("strength")
            schedule = dictionary.get("schedule")
            alcohol_interaction_description = dictionary.get("alcohol_interaction_description")
            alcohol_nteraction = dictionary.get("alcohol_nteraction")
            # Return an object of this model
            return cls(name,
                       pregnancy_category,
                       lactation_category,
                       instructions,
                       faqs,
                       genric_id,
                       side_effects,
                       how_it_works,
                       therapeutic_class,
                       used_for,
                       strength,
                       schedule,
                       alcohol_interaction_description,
                       alcohol_nteraction)


